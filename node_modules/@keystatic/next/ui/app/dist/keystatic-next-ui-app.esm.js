import { useRouter, usePathname, useSearchParams } from 'next/navigation';
import Link from 'next/link';
import { useMemo, useState, useEffect } from 'react';
import { Keystatic } from '@keystatic/core/ui';
import { jsx } from 'react/jsx-runtime';

let _isClient = false;
function useIsClient() {
  const [isClient, setIsClient] = useState(_isClient);
  useEffect(() => {
    _isClient = true;
    setIsClient(true);
  }, []);
  return isClient;
}
function makePage(config) {
  return function Page() {
    const isClient = useIsClient();
    const router = useRouter();
    const pathname = usePathname();
    let href = pathname;
    const searchParams = useSearchParams().toString();
    if (searchParams) {
      href += `?${searchParams}`;
    }
    const keystaticRouter = useMemo(() => {
      const replaced = pathname.replace(/^\/keystatic\/?/, '');
      const params = replaced === '' ? [] : replaced.split('/').map(decodeURIComponent);
      return {
        href,
        params,
        push: async path => {
          router.push(path);
        },
        replace: async path => {
          router.replace(path);
        }
      };
    }, [href, router, pathname]);
    if (!isClient) return null;
    return /*#__PURE__*/jsx(Keystatic, {
      router: keystaticRouter,
      config: config,
      link: Link,
      appSlug: appSlug
    });
  };
}
const appSlug = {
  envName: 'NEXT_PUBLIC_KEYSTATIC_GITHUB_APP_SLUG',
  value: process.env.NEXT_PUBLIC_KEYSTATIC_GITHUB_APP_SLUG
};

export { makePage };
